{
    "io": {
        "name": "io",
        "type": "class",
        "desc": "The I/O library provides two different styles for file manipulation. The first one uses implicit file handles; that is, there are operations to set a default input file and a default output file, and all input/output operations are over these default files. The second style uses explicit file handles.",
        "detail": "http://www.lua.org/manual/5.3/manual.html#6.8",
        "fields": {
            "close": {
                "name": "close",
                "type": "function",
                "desc": "Equivalent to `file:close()`. Without a `file`, closes the default output file.",
                "detail": "http://www.lua.org/manual/5.3/manual.html#pdf-io.close",
                "args": [
                    {
                        "name": "handle",
                        "type": "parameter"
                    }
                ],
                "returns": []
            },
            "flush": {
                "name": "flush",
                "type": "function",
                "desc": "Equivalent to `io.output():flush()`.",
                "detail": "http://www.lua.org/manual/5.3/manual.html#pdf-io.flush",
                "args": [],
                "returns": []
            },
            "input": {
                "name": "input",
                "type": "function",
                "desc": "When called with a file name, it opens the named file (in text mode), and sets its handle as the default input file. When called with a file handle, it simply sets this file handle as the default input file. When called without arguments, it returns the current default input file.",
                "detail": "http://www.lua.org/manual/5.3/manual.html#pdf-io.input",
                "args": [
                    {
                        "name": "file",
                        "type": "parameter"
                    }
                ],
                "returns": []
            },
            "lines": {
                "name": "lines",
                "type": "function",
                "desc": "Opens the given file name in read mode and returns an iterator function that works like `file:lines(···)` over the opened file. When the iterator function detects the end of file, it returns no values (to finish the loop) and automatically closes the file.",
                "detail": "http://www.lua.org/manual/5.3/manual.html#pdf-io.lines",
                "args": [
                    {
                        "name": "filename",
                        "type": "parameter"
                    },
                    {
                        "name": "...",
                        "type": "parameter"
                    }
                ],
                "returns": [
                    {
                        "name": "iterator",
                        "type": "class",
                        "fields": {}
                    }
                ]
            },
            "open": {
                "name": "open",
                "type": "function",
                "desc": "This function opens a file, in the mode specified in the string `mode`. In case of success, it returns a new file handle.",
                "detail": "http://www.lua.org/manual/5.3/manual.html#pdf-io.open",
                "args": [
                    {
                        "name": "filename",
                        "type": "parameter"
                    },
                    {
                        "name": "mode",
                        "type": "parameter"
                    }
                ],
                "returns": [
                    {
                        "name": "file",
                        "type": "class"
                    }
                ]
            }
        }
    },
    "package": {
        "name": "package",
        "type": "class",
        "desc": "The package library provides basic facilities for loading modules in Lua. It exports one function directly in the global environment: require. Everything else is exported in a table package.",
        "detail": "http://www.lua.org/manual/5.3/manual.html#6.3",
        "fields": {
            "loaded": {
                "name": "loaded",
                "type": "table",
                "desc": "A table used by `require` to control which modules are already loaded. When you require a module modname and `package.loaded[modname]` is not false, require simply returns the value stored there.",
                "detail": "http://www.lua.org/manual/5.3/manual.html#pdf-package.loaded",
                "fields": {}
            },
            "path": {
                "name": "path",
                "type": "string",
                "desc": "The path used by `require` to search for a Lua loader.",
                "detail": "http://www.lua.org/manual/5.3/manual.html#pdf-package.path"
            }
        }
    }
}