{
  "global": {
    "type": "table",
    "fields": {
      "bit": {
        "link": "https://bitop.luajit.org/",
        "description": "This library provides bitwise operations. It provides all its functions inside the table bit.",
        "type": "table",
        "fields": {
          "arshift": {
            "link": "https://bitop.luajit.org/api.html#lshift",
            "description": "Returns the bitwise arithmetic right-shift of its first argument by the number of bits given by the second argument.",
            "type": "function",
            "args": [
              {
                "name": "x",
                "displayName": "x: number"
              },
              {
                "name": "n",
                "displayName": "n: number"
              }
            ],
            "returnTypes": [
              {
                "type": "number"
              }
            ]
          },
          "band": {
            "link": "https://bitop.luajit.org/api.html#bor",
            "description": "Returns the bitwise and of all of its arguments.",
            "type": "function",
            "args": [
              {
                "name": "x1",
                "displayName": "x1: number"
              },
              {
                "name": "x2",
                "displayName": "x2?: number"
              },
              {
                "name": "..."
              }
            ],
            "returnTypes": [
              {
                "type": "number"
              }
            ]
          },
          "bnot": {
            "link": "https://bitop.luajit.org/api.html#bnot",
            "description": "Returns the bitwise not of its argument.",
            "type": "function",
            "args": [
              {
                "name": "x",
                "displayName": "x: number"
              }
            ],
            "returnTypes": [
              {
                "type": "number"
              }
            ]
          },
          "bor": {
            "link": "https://bitop.luajit.org/api.html#bor",
            "description": "Returns the bitwise or of all of its arguments.",
            "type": "function",
            "args": [
              {
                "name": "x1",
                "displayName": "x1: number"
              },
              {
                "name": "x2",
                "displayName": "x2?: number"
              },
              {
                "name": "..."
              }
            ],
            "returnTypes": [
              {
                "type": "number"
              }
            ]
          },
          "bswap": {
            "link": "https://bitop.luajit.org/api.html#bswap",
            "description": "Swaps the bytes of its argument and returns it.",
            "type": "function",
            "args": [
              {
                "name": "x",
                "displayName": "x: number"
              }
            ],
            "returnTypes": [
              {
                "type": "number"
              }
            ]
          },
          "bxor": {
            "link": "https://bitop.luajit.org/api.html#bor",
            "description": "Returns the bitwise xor of all of its arguments.",
            "type": "function",
            "args": [
              {
                "name": "x1",
                "displayName": "x1: number"
              },
              {
                "name": "x2",
                "displayName": "x2?: number"
              },
              {
                "name": "..."
              }
            ],
            "returnTypes": [
              {
                "type": "number"
              }
            ]
          },
          "lshift": {
            "link": "https://bitop.luajit.org/api.html#lshift",
            "description": "Returns the bitwise logical left-shift of its first argument by the number of bits given by the second argument.",
            "type": "function",
            "args": [
              {
                "name": "x",
                "displayName": "x: number"
              },
              {
                "name": "n",
                "displayName": "n: number"
              }
            ],
            "returnTypes": [
              {
                "type": "number"
              }
            ]
          },
          "rol": {
            "link": "https://bitop.luajit.org/api.html#rol",
            "description": "Returns either the bitwise left rotation of its first argument by the number of bits given by the second argument. Bits shifted out on one side are shifted back in on the other side.",
            "type": "function",
            "args": [
              {
                "name": "x",
                "displayName": "x: number"
              },
              {
                "name": "n",
                "displayName": "n: number"
              }
            ],
            "returnTypes": [
              {
                "type": "number"
              }
            ]
          },
          "ror": {
            "link": "https://bitop.luajit.org/api.html#rol",
            "description": "Returns either the bitwise right rotation of its first argument by the number of bits given by the second argument. Bits shifted out on one side are shifted back in on the other side.",
            "type": "function",
            "args": [
              {
                "name": "x",
                "displayName": "x: number"
              },
              {
                "name": "n",
                "displayName": "n: number"
              }
            ],
            "returnTypes": [
              {
                "type": "number"
              }
            ]
          },
          "rshift": {
            "link": "https://bitop.luajit.org/api.html#lshift",
            "description": "Returns the bitwise logical right-shift of its first argument by the number of bits given by the second argument.",
            "type": "function",
            "args": [
              {
                "name": "x",
                "displayName": "x: number"
              },
              {
                "name": "n",
                "displayName": "n: number"
              }
            ],
            "returnTypes": [
              {
                "type": "number"
              }
            ]
          },
          "tobit": {
            "link": "https://bitop.luajit.org/api.html#tobit",
            "description": "Normalizes a number to the numeric range for bit operations and returns it.",
            "type": "function",
            "args": [
              {
                "name": "x",
                "displayName": "x: number"
              }
            ],
            "returnTypes": [
              {
                "type": "number"
              }
            ]
          },
          "tohex": {
            "link": "https://bitop.luajit.org/api.html#tohex",
            "description": "Converts its first argument to a hex string.",
            "type": "function",
            "args": [
              {
                "name": "x",
                "displayName": "x: number"
              },
              {
                "name": "n",
                "displayName": "n?: number"
              }
            ],
            "returnTypes": [
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ffi": {
        "link": "https://luajit.org/ext_ffi_api.html",
        "description": "The FFI library allows calling external C functions and using C data structures from pure Lua code.",
        "type": "table",
        "fields": {
          "abi": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_abi",
            "description": "Returns true if param (a Lua string) applies for the target ABI (Application Binary Interface). Returns false otherwise.",
            "args": [
              {
                "name": "param",
                "displayName": "param: string"
              }
            ],
            "returnTypes": [
              {
                "type": "boolean"
              }
            ]
          },
          "alignof": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_alignof",
            "description": "Returns the minimum required alignment for ct in bytes.",
            "args": [
              {
                "name": "ct",
                "displayName": "ct: ctype"
              }
            ],
            "returnTypes": [
              {
                "type": "number"
              }
            ]
          },
          "arch": {
            "type": "string",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_arch",
            "description": "Contains the target architecture name. Same contents as jit.arch."
          },
          "cast": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_cast",
            "description": "Creates a scalar cdata object for the given ct. The cdata object is initialized with init using the 'cast' variant of the C type conversion rules.",
            "args": [
              {
                "name": "ct",
                "displayName": "ct: ctype"
              },
              {
                "name": "init",
                "displayName": "init: any"
              }
            ],
            "returnTypes": [
              {
                "type": "cdata"
              }
            ]
          },
          "cdef": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_cdef",
            "description": "Adds multiple C declarations for types or external symbols (named variables or functions). `def` must be a Lua string.",
            "args": [
              {
                "name": "def",
                "displayName": "def: string"
              }
            ]
          },
          "copy": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_copy",
            "description": "Copies the data pointed to by src to dst. dst is converted to a 'void *' and src is converted to a 'const void *'. The number of bytes to copy is given by len.",
            "args": [
              {
                "name": "dst",
                "displayName": "dst: cdata"
              },
              {
                "name": "src",
                "displayName": "src: cdata"
              },
              {
                "name": "len",
                "displayName": "length?: number"
              }
            ]
          },
          "errno": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_errno",
            "description": "Returns the error number set by the last C function call which indicated an error condition. If the optional newerr argument is present, the error number is set to the new value and the previous value is returned.",
            "args": [
              {
                "name": "newerr",
                "displayName": "new_errno?: number"
              }
            ],
            "returnTypes": [
              {
                "type": "number"
              }
            ]
          },
          "fill": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_fill",
            "description": "Fills the data pointed to by dst with len constant bytes, given by c. If c is omitted, the data is zero-filled.",
            "args": [
              {
                "name": "dst",
                "displayName": "dst: cdata"
              },
              {
                "name": "len",
                "displayName": "length?: number"
              },
              {
                "name": "c",
                "displayName": "char?: string"
              }
            ]
          },
          "gc": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_gc",
            "description": "Associates a finalizer with a pointer or aggregate cdata object. The cdata object is returned unchanged.",
            "args": [
              {
                "name": "cdata",
                "displayName": "object: cdata"
              },
              {
                "name": "finalizer",
                "displayName": "finalizer: function(cdata)"
              }
            ],
            "returnTypes": [
              {
                "type": "cdata"
              }
            ]
          },
          "istype": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_istype",
            "description": "Returns true if obj has the C type given by ct. Returns false otherwise.",
            "args": [
              {
                "name": "ct",
                "displayName": "ct: ctype"
              },
              {
                "name": "obj",
                "displayName": "object: cdata"
              }
            ],
            "returnTypes": [
              {
                "type": "boolean"
              }
            ]
          },
          "load": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_load",
            "description": "Loads the dynamic library given by name and returns a new C library namespace which binds to its symbols. On POSIX systems, if global is true, the library symbols are loaded into the global namespace, too.",
            "args": [
              {
                "name": "name",
                "displayName": "name: string"
              },
              {
                "name": "global",
                "displayName": "global?: boolean"
              }
            ],
            "returnTypes": [
              {
                "type": "table"
              }
            ]
          },
          "metatype": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_metatype",
            "description": "Creates a ctype object for the given ct and associates it with a metatable. Only struct/union types, complex numbers and vectors are allowed.",
            "args": [
              {
                "name": "ct",
                "displayName": "ct: ctype"
              },
              {
                "name": "metatable",
                "displayName": "metatable: table"
              }
            ],
            "returnTypes": [
              {
                "type": "ctype"
              }
            ]
          },
          "new": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_new",
            "description": "Creates a cdata object for the given C type.",
            "args": [
              {
                "name": "ct",
                "displayName": "ct: ctype"
              },
              {
                "name": "nelem",
                "displayName": "nelem?: number"
              },
              {
                "name": "init",
                "displayName": "init?: any"
              },
              {
                "name": "..."
              }
            ],
            "returnTypes": [
              {
                "type": "cdata"
              }
            ]
          },
          "offsetof": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_offsetof",
            "description": "Returns the offset (in bytes) of field relative to the start of ct, which must be a struct. Additionally returns the position and the field size (in bits) for bit fields.",
            "args": [
              {
                "name": "ct",
                "displayName": "ct: ctype"
              },
              {
                "name": "field",
                "displayName": "field: string"
              }
            ],
            "returnTypes": [
              {
                "type": "number",
                "displayName": "offset"
              },
              {
                "type": "number",
                "displayName": "bpos"
              },
              {
                "type": "number",
                "displayName": "bsize"
              }
            ]
          },
          "os": {
            "type": "string",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_os",
            "description": "Contains the target OS name. Same contents as jit.os."
          },
          "sizeof": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_sizeof",
            "description": "Returns the size of ct in bytes. Returns nil if the size is not known (e.g. for 'void' or function types). Requires nelem for VLA/VLS types, except for cdata objects.",
            "args": [
              {
                "name": "ct",
                "displayName": "ct: ctype"
              },
              {
                "name": "nelem",
                "displayName": "nelem?: number"
              }
            ],
            "returnTypes": [
              {
                "type": "number"
              }
            ]
          },
          "string": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_string",
            "description": "Creates an interned Lua string from the data pointed to by ptr. If the optional argument len is missing, ptr is converted to a 'char *' and the data is assumed to be zero-terminated.",
            "args": [
              {
                "name": "ptr",
                "displayName": "ptr: pointer"
              },
              {
                "name": "len",
                "displayName": "length?: number"
              }
            ],
            "returnTypes": [
              {
                "type": "string"
              }
            ]
          },
          "typeof": {
            "type": "function",
            "link": "https://luajit.org/ext_ffi_api.html#ffi_typeof",
            "description": "Creates a ctype object for the given ct.",
            "args": [
              {
                "name": "ct",
                "displayName": "ct: ctype"
              }
            ],
            "returnTypes": [
              {
                "type": "ctype"
              }
            ]
          },
          "C": {
            "type": "table",
            "fields": {},
            "link": "https://luajit.org/ext_ffi_api.html#ffi_C",
            "description": "The default C library namespace. It binds to the default set of symbols or libraries on the target system."
          }
        }
      },
      "jit": {
        "link": "https://luajit.org/ext_jit.html",
        "description": "The functions in this built-in module control the behavior of the JIT compiler engine.",
        "type": "table",
        "fields": {
          "arch": {
            "type": "string",
            "link": "https://luajit.org/ext_jit.html#jit_arch",
            "description": "Contains the target architecture name."
          },
          "flush": {
            "type": "function",
            "variants": [
              {
                "link": "https://luajit.org/ext_jit.html#jit_flush",
                "description": "Flushes the whole cache of compiled code.",
                "args": []
              },
              {
                "link": "https://luajit.org/ext_jit.html#jit_onoff_func",
                "description": "Flushes the code, but doesn't affect the enable/disable status.",
                "args": [
                  {
                    "name": "func",
                    "displayName": "func: function|true"
                  },
                  {
                    "name": "b",
                    "displayName": "b?: boolean"
                  }
                ]
              },
              {
                "link": "https://luajit.org/ext_jit.html#jit_flush_tr",
                "description": "Flushes the root trace, specified by its number, and all of its side traces from the cache. The code for the trace will be retained as long as there are any other traces which link to it.",
                "args": [
                  {
                    "name": "tr",
                    "displayName": "tr: number"
                  }
                ]
              }
            ]
          },
          "off": {
            "type": "function",
            "variants": [
              {
                "link": "https://luajit.org/ext_jit.html#jit_onoff",
                "description": "Turns the whole JIT compiler off.",
                "args": []
              },
              {
                "link": "https://luajit.org/ext_jit.html#jit_onoff_func",
                "description": "Disables JIT compilation for a Lua function and flushes any already compiled code from the code cache.",
                "args": [
                  {
                    "name": "func",
                    "displayName": "func: function|true"
                  },
                  {
                    "name": "b",
                    "displayName": "b?: boolean"
                  }
                ]
              }
            ]
          },
          "on": {
            "type": "function",
            "variants": [
              {
                "link": "https://luajit.org/ext_jit.html#jit_onoff",
                "description": "Turns the whole JIT compiler on (default).",
                "args": []
              },
              {
                "link": "https://luajit.org/ext_jit.html#jit_onoff_func",
                "description": "Enables JIT compilation for a Lua function.",
                "args": [
                  {
                    "name": "func",
                    "displayName": "func: function|true"
                  },
                  {
                    "name": "b",
                    "displayName": "b?: boolean"
                  }
                ]
              }
            ]
          },
          "opt": {
            "link": "https://luajit.org/ext_jit.html#jit_opt",
            "description": "This sub-module provides the backend for the -O command line option.",
            "type": "table",
            "fields": {
              "start": {
                "type": "function",
                "args": []
              }
            }
          },
          "os": {
            "type": "string",
            "link": "https://luajit.org/ext_jit.html#jit_os",
            "description": "Contains the target OS name."
          },
          "status": {
            "type": "string",
            "link": "https://luajit.org/ext_jit.html#jit_version",
            "description": "Contains the LuaJIT version string."
          },
          "util": {
            "link": "https://luajit.org/ext_jit.html#jit_util",
            "description": "This sub-module holds functions to introspect the bytecode, generated traces, the IR and the generated machine code.",
            "type": "table",
            "fields": {
              "funcbc": {
                "type": "function",
                "args": []
              },
              "funcinfo": {
                "type": "function",
                "args": []
              },
              "funck": {
                "type": "function",
                "args": []
              },
              "funcuvname": {
                "type": "function",
                "args": []
              },
              "ircalladdr": {
                "type": "function",
                "args": []
              },
              "traceexitstub": {
                "type": "function",
                "args": []
              },
              "traceinfo": {
                "type": "function",
                "args": []
              },
              "traceir": {
                "type": "function",
                "args": []
              },
              "tracek": {
                "type": "function",
                "args": []
              },
              "tracemc": {
                "type": "function",
                "args": []
              },
              "tracesnap": {
                "type": "function",
                "args": []
              }
            }
          },
          "version_num": {
            "type": "number",
            "link": "https://luajit.org/ext_jit.html#jit_version_num",
            "description": "Contains the version number of the LuaJIT core."
          }
        }
      }
    }
  }
}